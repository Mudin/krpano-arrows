<krpano>
	<style name="default-shadow" fillcolor="0x000000" fillalpha="0.6" bordercolor="0x000000" borderalpha="0.6" borderwidth="2.0" zorder="0" keep="false" />
	<style name="default-arrow" fillcolor="0xd7d7d7" fillalpha="1.0" bordercolor="0xd7d7d7" borderalpha="1.0" borderwidth="2.0" onover="set(fillcolor,0xffffff);set(bordercolor,0xffffff);" onout="set(fillcolor,0xd7d7d7);set(bordercolor,0xd7d7d7);" zorder="50" keep="false" />
	<layer name="default-arrow-shape">
		<arrow>
			<point name="p0" x="0" y="40" />
			<point name="p1" x="-9" y="35" />
			<point name="p2" x="0" y="57" />
			<point name="p3" x="9" y="35" />
			<center dist="180" posv="16" posvs="16.35" />
		</arrow>
	</layer>
	<action name="addHotSpotWithStyle">
		addhotspot(%1);
		hotspot[%1].loadstyle(%2);
	</action>
	<action name="addHotSpotIfMissing">
		txtadd(sh, %1, 'shadow');
		if(hotspot[%1].style === null,
			if(layer[connections].connection[%1].shadowstyle === null,
				addHotSpotWithStyle(get(sh), 'default-shadow');
			,
				addHotSpotWithStyle(get(sh), get(layer[connections].connection[%1].shadowstyle));
			);
			if(layer[connections].connection[%1].arrowstyle === null,
				addHotSpotWithStyle(%1, 'default-arrow');
			,
				addHotSpotWithStyle(%1, get(layer[connections].connection[%1].arrowstyle));
			);
			if(layer[connections].connection[%1].onclick === null,
				txtadd(hotspot[%1].onclick, 'loadscene(', %1, ', null, KEEPVIEW, BLEND(0.2));');
			,
				set(hotspot[%1].onclick, layer[connections].connection[%1].onclick);
			);
		);
	</action>
	<action name="drawArrow">
		txtadd(sh, %1, 'shadow');
		addHotSpotIfMissing(%1);
		div(deg2rad, Math.PI, 180.0);
		sub(fr, view.hlookat, %2);
		mul(fr, deg2rad);
		Math.sin(sfr, fr);
		Math.cos(cfr, fr);
		mul(basev, layer[%3].arrow.center.posv, deg2rad);
		Math.sin(basev);
		mul(basev, layer[%3].arrow.center.dist);
		mul(basevs, layer[%3].arrow.center.posvs, deg2rad);
		Math.sin(basevs);
		mul(basevs, layer[%3].arrow.center.dist);
		for(set(num, 0), num LT layer[%3].arrow.point.count, inc(num),
			mul(crx, layer[%3].arrow.point[get(num)].x, cfr);
			mul(crx1, layer[%3].arrow.point[get(num)].y, sfr);
			sub(crx, crx1);
			mul(cry, layer[%3].arrow.point[get(num)].y, cfr);
			mul(cry1, layer[%3].arrow.point[get(num)].x, sfr);
			add(cry, cry1);
			add(cry, layer[%3].arrow.center.dist);
			Math.atan2(ph, crx, cry);
			div(ph, deg2rad);
			add(hotspot[get(sh)].point[get(num)].ath, ph, view.hlookat);
			add(hotspot[%1].point[get(num)].ath, ph, view.hlookat);
			mul(crx1, crx, crx);
			mul(distc, cry, cry);
			add(distc, crx1);
			Math.sqrt(distc);
			Math.atan2(pv, basevs, distc);
			div(hotspot[get(sh)].point[get(num)].atv, pv, deg2rad);
			Math.atan2(pv, basev, distc);
			div(hotspot[%1].point[get(num)].atv, pv, deg2rad);
		);
	</action>
	<action name="updateConnections">
		for(set(i, 0), i LT layer[connections].connection.count, inc(i),
			if(layer[connections].connection[get(i)].shape === null,
				set(shape, 'default-arrow-shape');
			,
				copy(shape, layer[connections].connection[get(i)].shape);
			);
			drawArrow(get(layer[connections].connection[get(i)].name), get(layer[connections].connection[get(i)].hdir), get(shape));
		);
	</action>
	<events onviewchange="updateConnections();" />
</krpano>
